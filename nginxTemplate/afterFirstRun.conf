fastcgi_cache_path /etc/nginx-cache levels=1:2 keys_zone=phpcache:100m inactive=60m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
server {
        listen 80;
        listen [::]:80;

        proxy_read_timeout 700;
        proxy_connect_timeout 700;
        proxy_send_timeout 700;
        proxy_max_temp_file_size 0;
        fastcgi_read_timeout 700;

        server_name example.com www.example.com;

        location ~ /.well-known/acme-challenge {
                allow all;
                root /var/www/html;
        }

        location = /xmlrpc.php {
		deny all;
	}

        location / {
                return 301 https://$host$request_uri;
        }
}



server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        proxy_read_timeout 700;
        proxy_connect_timeout 700;
        proxy_send_timeout 700;
        fastcgi_read_timeout 700;
        proxy_max_temp_file_size 0;
        client_body_buffer_size     1024M;
        client_max_body_size        1024M;


        tcp_nodelay on;
        open_file_cache max=5000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 2;
        open_file_cache_errors on;


        gzip on;
        gzip_disable "msie6";

        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_min_length 256;
        gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

        server_name example.com www.example.com;

        index index.php index.html index.htm;

        root /var/www/html;

        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

        #include /etc/nginx/conf.d/options-ssl-nginx.conf;

        
        # enable strict transport security only if you understand the implications

        ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
        ssl_session_timeout 1h; # 1 hour during which sessions can be re-used
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_buffer_size 4k;





        location / {
                try_files $uri $uri/ /index.php$is_args$args;
        }


        #Cache everything by default
        set $no_cache 0;

        #Don't cache POST requests
        if ($request_method = POST)
        {
                set $no_cache 1;
        }

        #Don't cache if the URL contains a query string
        if ($query_string != "")
        {
                set $no_cache 1;
        }

        #Don't cache the following URLs
        if ($request_uri ~* "/(administrator/|login.php)")
        {
                set $no_cache 1;
        }

        #Don't cache if there is a cookie called PHPSESSID
        if ($http_cookie = "PHPSESSID")
        {
                set $no_cache 1;
        }


        # Don't cache uris containing the following segments
        if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
        set $skip_cache 1;
        }

        # Don't use the cache for logged in users or recent commenters
        if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $skip_cache 1;
        }

        location ~ \.php$ {
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass wordpress:9000;
                fastcgi_index index.php;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
                fastcgi_cache_bypass $no_cache;
                fastcgi_no_cache $no_cache;
                fastcgi_cache phpcache; # The name of the cache key-zone to use
                fastcgi_cache_valid 200 1d; # What to cache: 'Code 200' responses, for half an hour
                fastcgi_cache_methods GET HEAD; # What to cache: only GET and HEAD requests (not POST)
                fastcgi_max_temp_file_size 0;
                add_header X-Fastcgi-Cache $upstream_cache_status; # Add header so we can see if the cache hits or misses
                include    conf.d/helpers/security.conf;



        }

        location ~ /\.ht {
                deny all;
        }

        location = /favicon.ico {
                log_not_found off; access_log off;
        }
        location = /robots.txt {
                log_not_found off; access_log off; allow all;
        }
        location ~* \.(css|gif|ico|jpeg|jpg|js|png|webp|eot|ttf|woff|woff2)$ {
                #expires max;
                expires 365d;
                log_not_found off;
        }

        location = /xmlrpc.php {
		deny all;
	}


}
